{%- if request.design_mode -%}
  {%- comment %}
  	The css and js neded for this section will be called once in the layout file if this section is on the page.
    What we are doing here is just making sure that this section gets the css needed in the editor when it is first added to a template.
  {% endcomment -%}
  <link rel="stylesheet" href="{{ 'component-rte.css' | asset_url }}" media="print" onload="this.media='all'">
  <link rel="stylesheet" href="{{ 'section-rich-text.css' | asset_url }}" media="print" onload="this.media='all'">
  <noscript>{{ 'component-rte.css' | asset_url | stylesheet_tag }}</noscript>
  <noscript>{{ 'section-rich-text.css' | asset_url | stylesheet_tag }}</noscript>
{%- endif -%}

<div class="rich-text {{ section.settings.text_alignment }} color-{{ section.settings.color_scheme }}">
  <div class="rich-text__blocks">
    {%- for block in section.blocks -%}
      {%- case block.type -%}
        {%- when 'heading' -%}
          <h2 class="h2">{{ block.settings.heading | escape }}</h2>
        {%- when 'text' -%}
          <div class="rich-text__text rte">
            {%- if block.settings.size == 'large' -%}
              {{ block.settings.text | replace: '<p>' , '<p class="body-copy-1">' }}
            {%- elsif block.settings.size == 'normal' -%}
              {{ block.settings.text | replace: '<p>' , '<p class="body-copy-2">' }}
            {%- elsif block.settings.size == 'small' -%}
              {{ block.settings.text | replace: '<p>' , '<p class="body-copy-3">' }}
            {%- endif -%}
          </div>
        {%- when 'button' -%}
          <a{% if block.settings.button_link == blank %} aria-disabled="true"{% else %} href="{{ block.settings.button_link }}"{% endif %} class="button{% if block.settings.button_style_reversed %} hover-state-reverse{% endif %}" {% if block.settings.new_tab %} target="_blank"{% endif %}>{{ block.settings.button_label | escape }}</a>
      {%- endcase -%}
    {%- endfor -%}
  </div>
</div>

<style>
	.rich-text.left {
	text-align: left;
}
  	.rich-text.right {
	text-align: right;
}
    	.rich-text.center {
	text-align: center;
}
  

</style>
{% schema %}
{
  "name": "Text Only",
  "tag": "section",
  "class": "section-rich-text",
  "settings": [
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "background-1",
          "label": "Color 1"
        },
        {
          "value": "background-2",
          "label": "Color 2"
        },
        {
          "value": "background-3",
          "label": "Color 3"
        },
        {
          "value": "background-4",
          "label": "Color 4"
        },
        {
          "value": "background-5",
          "label": "Color 5"
        },
        {
          "value": "background-6",
          "label": "Color 6"
        }
      ],
      "default": "none",
      "label": "None"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text Alignment",
      "options": [
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "t:sections.rich-text.blocks.heading.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Add Heading",
          "label": "t:sections.rich-text.blocks.heading.settings.heading.label"
        }
      ]
    },
    {
      "type": "text",
      "name": "t:sections.rich-text.blocks.text.name",
      "limit": 1,
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Add Text</p>",
          "label": "t:sections.rich-text.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "size",
          "options": [
            {
              "value": "large",
              "label": "Large"
            },
            {
              "value": "normal",
              "label": "Normal"
            },
            {
              "value": "small",
              "label": "Small"
            }
          ],
          "default": "large",
          "label": "Text size"
        }
      ]
    },
    {
      "type": "button",
      "name": "t:sections.rich-text.blocks.button.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "button_label",
          "default": "Button label",
          "label": "t:sections.rich-text.blocks.button.settings.button_label.label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "t:sections.rich-text.blocks.button.settings.button_style_secondary.label"
        },
        {
          "type": "checkbox",
          "id": "new_tab",
          "label": "Open in a new tab",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "button_style_reversed",
          "default": true,
          "label": "Button hover state reversed"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Text Only",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "text"
        }
      ]
    }
  ]
}
{% endschema %}

<style>

.rich-text.left {
	padding: 0 5rem;
}
  #MainContent p {
	margin: 0 0 26px;
}
  .rich-text__blocks {
	max-width: 78rem;
}
  .rich-text__blocks {
	margin: auto;
	width: calc(100% - 5rem / var(--font-body-scale));
}
</style>